if(TARGET unofficial-angle)
    return()
endif()

set(DEFINITIONS_DEBUG @DEFINITIONS_DEBUG@)
set(DEFINITIONS_RELEASE @DEFINITIONS_RELEASE@)

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
# get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
# get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
    set(_IMPORT_PREFIX "")
endif()

add_library(unofficial-angle INTERFACE IMPORTED GLOBAL)
add_library(unofficial::angle ALIAS unofficial-angle)

set(_LIBRARIES @LINK_TARGETS@)

# if(WIN32)
#     list(APPEND LIBRARIES_
#         cfgmgr32
#         powrprof
#         propsys
#         setupapi
#         userenv
#         wbemuuid
#         winmm
#         advapi32
#         comdlg32
#         dbghelp
#         dnsapi
#         gdi32
#         msimg32
#         odbc32
#         odbccp32
#         oleaut32
#         shell32
#         shlwapi
#         user32
#         usp10
#         uuid
#         version
#         wininet
#         winspool
#         ws2_32
#         delayimp
#         kernel32
#         ole32)
# elseif(APPLE)
#     list(APPEND LIBRARIES_ 
#         ApplicationServices
#         AppKit
#         CoreFoundation
#         IOKit
#         OpenDirectory
#         Security
#         bsm
#         pmenergy
#         pmsample)
# endif()

foreach(LIB_NAME ${_LIBRARIES})
    find_library(_LIB NAMES ${LIB_NAME} ${LIB_NAME}.dll)
    target_link_libraries(unofficial-angle INTERFACE ${_LIB})
    # unset(_LIB CACHE)
endforeach()

# if(UNIX AND NOT APPLE)
#     target_link_libraries(unofficial-angle INTERFACE -ldl -latomic -lpthread)
# endif()

target_include_directories(unofficial-angle INTERFACE ${_IMPORT_PREFIX}/include/unofficial-angle)

target_compile_definitions(unofficial-angle INTERFACE
    $<$<CONFIG:Debug>:${DEFINITIONS_DBG}>
    $<$<CONFIG:Release>:${DEFINITIONS_REL}>)

# target_compile_features(unofficial-angle INTERFACE cxx_std_14)
